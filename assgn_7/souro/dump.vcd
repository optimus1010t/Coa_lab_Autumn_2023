$date
	Fri Nov  3 00:38:17 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 ! \registers[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 " \registers[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 # \registers[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 $ \registers[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 % \registers[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 & \registers[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 ' \registers[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 ( \registers[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 ) \registers[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 * \registers[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 + \registers[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 , \registers[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 - \registers[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 . \registers[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 / \registers[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 0 \registers[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$scope module haha $end
$scope module reg_module $end
$var reg 32 1 \registers[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_ControlUnit $end
$var wire 6 2 opcode [5:0] $end
$var wire 2 3 ZControl [1:0] $end
$var wire 1 4 SPWrite $end
$var wire 1 5 RegWrite $end
$var wire 2 6 RegDst [1:0] $end
$var wire 1 7 PCUpdate $end
$var wire 2 8 PCControl [1:0] $end
$var wire 1 9 MemToOut $end
$var wire 1 : Call $end
$var wire 6 ; ALUop [5:0] $end
$var wire 1 < ALUSrc2 $end
$var wire 1 = ALUSrc1 $end
$var parameter 32 > CLK_PERIOD $end
$var reg 1 ? clk $end
$scope module haha $end
$var wire 32 @ readDataSP [31:0] $end
$var wire 5 A writeRegister [4:0] $end
$var wire 32 B sign_extended_immediate [31:0] $end
$var wire 5 C rt [4:0] $end
$var wire 5 D rs [4:0] $end
$var wire 32 E readData2 [31:0] $end
$var wire 32 F readData1 [31:0] $end
$var wire 5 G rd [4:0] $end
$var wire 6 H opcode [5:0] $end
$var wire 32 I mux3output [31:0] $end
$var wire 32 J instruction [31:0] $end
$var wire 16 K immediate [15:0] $end
$var wire 6 L funct [5:0] $end
$var wire 32 M adder_output [31:0] $end
$var wire 32 N adder_input [31:0] $end
$var wire 32 O ZOutput [31:0] $end
$var wire 2 P ZControl [1:0] $end
$var wire 1 4 SPWrite $end
$var wire 1 5 RegWrite $end
$var wire 2 Q RegDst [1:0] $end
$var wire 32 R PCoutput [31:0] $end
$var wire 32 S PCinput [31:0] $end
$var wire 1 7 PCUpdate $end
$var wire 2 T PCControl [1:0] $end
$var wire 1 9 MemToOut $end
$var wire 1 : Call $end
$var wire 6 U ALUop [5:0] $end
$var wire 32 V ALUinput2 [31:0] $end
$var wire 32 W ALUinput1 [31:0] $end
$var wire 6 X ALUfunct [5:0] $end
$var wire 1 < ALUSrc2 $end
$var wire 1 = ALUSrc1 $end
$var wire 32 Y ALUResult [31:0] $end
$scope module adder_module $end
$var wire 32 Z in2 [31:0] $end
$var wire 32 [ in1 [31:0] $end
$var reg 32 \ out [31:0] $end
$upscope $end
$scope module alu_module $end
$var wire 32 ] xor_out [31:0] $end
$var wire 32 ^ sub_out [31:0] $end
$var wire 32 _ srl_out [31:0] $end
$var wire 32 ` sra_out [31:0] $end
$var wire 32 a sla_out [31:0] $end
$var wire 32 b or_out [31:0] $end
$var wire 32 c not_out [31:0] $end
$var wire 32 d and_out [31:0] $end
$var wire 32 e add_out [31:0] $end
$var wire 32 f B [31:0] $end
$var wire 6 g ALUfunct [5:0] $end
$var wire 32 h A [31:0] $end
$var reg 1 i flagS $end
$var reg 1 j flagZ $end
$var reg 32 k out [31:0] $end
$scope module add_module $end
$var wire 32 l S [31:0] $end
$var wire 32 m B [31:0] $end
$var wire 32 n A [31:0] $end
$upscope $end
$scope module and_module $end
$var wire 32 o S [31:0] $end
$var wire 32 p B [31:0] $end
$var wire 32 q A [31:0] $end
$upscope $end
$scope module not_module $end
$var wire 32 r S [31:0] $end
$var wire 32 s A [31:0] $end
$upscope $end
$scope module or_module $end
$var wire 32 t S [31:0] $end
$var wire 32 u B [31:0] $end
$var wire 32 v A [31:0] $end
$upscope $end
$scope module sla_module $end
$var wire 32 w S [31:0] $end
$var wire 32 x B [31:0] $end
$var wire 32 y A [31:0] $end
$upscope $end
$scope module sra_module $end
$var wire 32 z S [31:0] $end
$var wire 32 { B [31:0] $end
$var wire 32 | A [31:0] $end
$upscope $end
$scope module srl_module $end
$var wire 32 } S [31:0] $end
$var wire 32 ~ B [31:0] $end
$var wire 32 !" A [31:0] $end
$upscope $end
$scope module sub_module $end
$var wire 32 "" S [31:0] $end
$var wire 32 #" B [31:0] $end
$var wire 32 $" A [31:0] $end
$upscope $end
$scope module xor_module $end
$var wire 32 %" S [31:0] $end
$var wire 32 &" B [31:0] $end
$var wire 32 '" A [31:0] $end
$upscope $end
$upscope $end
$scope module alucon_module $end
$var wire 6 (" funct [5:0] $end
$var wire 6 )" ALUop [5:0] $end
$var reg 6 *" ALUfunct [5:0] $end
$upscope $end
$scope module idec_module $end
$var wire 5 +" rt [4:0] $end
$var wire 5 ," rs [4:0] $end
$var wire 5 -" rd [4:0] $end
$var wire 6 ." opcode [5:0] $end
$var wire 32 /" instruction [31:0] $end
$var wire 16 0" immediate [15:0] $end
$var wire 6 1" funct [5:0] $end
$upscope $end
$scope module imem_module $end
$var wire 32 2" instruction [31:0] $end
$var wire 32 3" address [31:0] $end
$upscope $end
$scope module mux2to1_32bit_module_1 $end
$var wire 32 4" in2 [31:0] $end
$var wire 1 = sel $end
$var wire 32 5" out [31:0] $end
$var wire 32 6" in1 [31:0] $end
$upscope $end
$scope module mux2to1_32bit_module_2 $end
$var wire 1 < sel $end
$var wire 32 7" out [31:0] $end
$var wire 32 8" in2 [31:0] $end
$var wire 32 9" in1 [31:0] $end
$upscope $end
$scope module mux2to1_32bit_module_3 $end
$var wire 32 :" in1 [31:0] $end
$var wire 1 9 sel $end
$var wire 32 ;" out [31:0] $end
$var wire 32 <" in2 [31:0] $end
$upscope $end
$scope module mux2to1_32bit_module_4 $end
$var wire 32 =" in1 [31:0] $end
$var wire 32 >" in2 [31:0] $end
$var wire 1 7 sel $end
$var wire 32 ?" out [31:0] $end
$upscope $end
$scope module mux3to1_module $end
$var wire 5 @" rd [4:0] $end
$var wire 5 A" rs [4:0] $end
$var wire 5 B" rt [4:0] $end
$var wire 2 C" sel [1:0] $end
$var reg 5 D" out [4:0] $end
$upscope $end
$scope module mux4vsin2_module $end
$var wire 1 : sel $end
$var wire 32 E" out [31:0] $end
$var wire 32 F" in2 [31:0] $end
$upscope $end
$scope module pc_module $end
$var wire 32 G" PCinput [31:0] $end
$var wire 2 H" PCControl [1:0] $end
$var reg 32 I" PC [31:0] $end
$var reg 32 J" PCoutput [31:0] $end
$upscope $end
$scope module reg_module $end
$var wire 32 K" ReadData1 [31:0] $end
$var wire 32 L" ReadData2 [31:0] $end
$var wire 32 M" ReadDataSP [31:0] $end
$var wire 5 N" ReadRegister1 [4:0] $end
$var wire 5 O" ReadRegister2 [4:0] $end
$var wire 32 P" WriteData [31:0] $end
$var wire 32 Q" WriteDataSP [31:0] $end
$var wire 5 R" WriteRegister [4:0] $end
$var wire 1 4 SPWrite $end
$var wire 1 5 RegWrite $end
$upscope $end
$scope module sign_extend_module $end
$var wire 16 S" in [15:0] $end
$var wire 32 T" out [31:0] $end
$upscope $end
$scope module z_module $end
$var wire 32 U" ZInput [31:0] $end
$var wire 2 V" ZControl [1:0] $end
$var reg 32 W" ZInternal [31:0] $end
$var reg 32 X" ZOutput [31:0] $end
$upscope $end
$upscope $end
$scope module hehe $end
$var wire 1 ? clk $end
$var wire 6 Y" opcode [5:0] $end
$var reg 1 = ALUSrc1 $end
$var reg 1 < ALUSrc2 $end
$var reg 6 Z" ALUop [5:0] $end
$var reg 1 : Call $end
$var reg 1 9 MemToOut $end
$var reg 2 [" PCControl [1:0] $end
$var reg 1 7 PCUpdate $end
$var reg 2 \" RegDst [1:0] $end
$var reg 1 5 RegWrite $end
$var reg 1 4 SPWrite $end
$var reg 2 ]" ZControl [1:0] $end
$var reg 2 ^" cu_state [1:0] $end
$var reg 5 _" instr_state [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 >
$end
#0
$dumpvars
b0 _"
b0 ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b11 U"
b1100000100000 T"
b1100000100000 S"
b1 R"
b0 Q"
b0 P"
b10 O"
b1 N"
b0 M"
b10 L"
b1 K"
b0 J"
b0 I"
b0 H"
b100 G"
b1100000100000 F"
b100 E"
b1 D"
b0 C"
b10 B"
b1 A"
b11 @"
b100 ?"
b0 >"
b100 ="
b0 <"
b0 ;"
b0 :"
b10 9"
b1100000100000 8"
b10 7"
b1 6"
b1 5"
b0 4"
b0 3"
b1000100001100000100000 2"
b100000 1"
b1100000100000 0"
b1000100001100000100000 /"
b0 ."
b11 -"
b1 ,"
b10 +"
b100000 *"
b0 )"
b100000 ("
b1 '"
b10 &"
b11 %"
b1 $"
b10 #"
b11111111111111111111111111111111 ""
b1 !"
b10 ~
b1 }
b1 |
b10 {
b1 z
b1 y
b10 x
b1 w
b1 v
b10 u
b11 t
b1 s
b11111111111111111111111111111110 r
b1 q
b10 p
b0 o
b1 n
b10 m
b11 l
b11 k
0j
0i
b1 h
b100000 g
b10 f
b11 e
b0 d
b11111111111111111111111111111110 c
b11 b
b1 a
b1 `
b1 _
b11111111111111111111111111111111 ^
b11 ]
b100 \
b0 [
b100 Z
b11 Y
b100000 X
b1 W
b10 V
b0 U
b0 T
b100 S
b0 R
b0 Q
b0 P
b0 O
b100 N
b100 M
b100000 L
b1100000100000 K
b1000100001100000100000 J
b0 I
b0 H
b11 G
b1 F
b10 E
b1 D
b10 C
b1100000100000 B
b1 A
b0 @
0?
0=
0<
b0 ;
0:
09
b0 8
07
b0 6
05
04
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b10 #
b1 "
b0 !
$end
#5
b1 ^"
b1 8
b1 T
b1 H"
b1 ["
1?
#10
0?
#15
b11 W"
b11 A
b11 D"
b11 R"
b1 _"
b10 3
b10 P
b10 V"
b10 ]"
b10 6
b10 Q
b10 C"
b10 \"
b0 8
b0 T
b0 H"
b0 ["
1?
#20
0?
#25
b11 I
b11 ;"
b11 >"
b11 P"
b11 $
b11 O
b11 <"
b11 X"
b10 _"
15
19
b1 3
b1 P
b1 V"
b1 ]"
1?
#30
0?
#35
b0 I
b0 ;"
b0 >"
b0 P"
b11 _"
b0 3
b0 P
b0 V"
b0 ]"
09
05
1?
#40
0?
#45
b100 I"
b10 8
b10 T
b10 H"
b10 ["
b0 _"
b0 ^"
1?
#50
0?
#55
b10 Y
b10 k
b10 U"
b10 ]
b10 %"
b10 b
b10 t
b11111111111111111111111111111101 c
b11111111111111111111111111111101 r
b1001 X
b1001 g
b1001 *"
b0 V
b0 f
b0 m
b0 p
b0 u
b0 x
b0 {
b0 ~
b0 #"
b0 &"
b0 7"
b10 ^
b10 ""
b10 _
b10 }
b10 `
b10 z
b10 a
b10 w
b10 e
b10 l
b10 W
b10 h
b10 n
b10 q
b10 s
b10 v
b10 y
b10 |
b10 !"
b10 $"
b10 '"
b10 5"
b0 A
b0 D"
b0 R"
b1001 L
b1001 ("
b1001 1"
b1001 B
b1001 8"
b1001 F"
b1001 T"
b1001 K
b1001 0"
b1001 S"
b0 G
b0 -"
b0 @"
b0 E
b0 9"
b0 L"
b0 C
b0 +"
b0 B"
b0 O"
b10 F
b10 6"
b10 K"
b10 D
b10 ,"
b10 A"
b10 N"
b110 2
b110 H
b110 ."
b110 Y"
b1000 S
b1000 ?"
b1000 G"
b11000010000000000000000001001 J
b11000010000000000000000001001 /"
b11000010000000000000000001001 2"
b1000 M
b1000 \
b1000 ="
b100 R
b100 [
b100 3"
b100 J"
b1 ^"
b1 8
b1 T
b1 H"
b1 ["
1?
#60
0?
#65
b11111111111111111111111111111101 Y
b11111111111111111111111111111101 k
b11111111111111111111111111111101 U"
b1011 ]
b1011 %"
b1 _
b1 }
b1 `
b1 z
b100 a
b100 w
b1011 b
b1011 t
b11111111111111111111111111111001 ^
b11111111111111111111111111111001 ""
b1011 e
b1011 l
b1001 V
b1001 f
b1001 m
b1001 p
b1001 u
b1001 x
b1001 {
b1001 ~
b1001 #"
b1001 &"
b1001 7"
b11111111111111111111111111111101 W"
b100111 X
b100111 g
b100111 *"
b10 A
b10 D"
b10 R"
b1 _"
b10 3
b10 P
b10 V"
b10 ]"
1<
b110 ;
b110 U
b110 )"
b110 Z"
b0 6
b0 Q
b0 C"
b0 \"
b0 8
b0 T
b0 H"
b0 ["
1?
#70
0?
#75
1i
b10 Y
b10 k
b10 U"
b1001 d
b1001 o
b11111111111111111111111111110100 ]
b11111111111111111111111111110100 %"
b11111111111111111111111111111101 b
b11111111111111111111111111111101 t
b10 c
b10 r
b11111111111111111111111111110100 ^
b11111111111111111111111111110100 ""
b1111111111111111111111111111110 _
b1111111111111111111111111111110 }
b11111111111111111111111111111110 `
b11111111111111111111111111111110 z
b11111111111111111111111111111010 a
b11111111111111111111111111111010 w
b110 e
b110 l
b11111111111111111111111111111101 W
b11111111111111111111111111111101 h
b11111111111111111111111111111101 n
b11111111111111111111111111111101 q
b11111111111111111111111111111101 s
b11111111111111111111111111111101 v
b11111111111111111111111111111101 y
b11111111111111111111111111111101 |
b11111111111111111111111111111101 !"
b11111111111111111111111111111101 $"
b11111111111111111111111111111101 '"
b11111111111111111111111111111101 5"
b11111111111111111111111111111101 I
b11111111111111111111111111111101 ;"
b11111111111111111111111111111101 >"
b11111111111111111111111111111101 P"
b11111111111111111111111111111101 #
b11111111111111111111111111111101 F
b11111111111111111111111111111101 6"
b11111111111111111111111111111101 K"
b11111111111111111111111111111101 O
b11111111111111111111111111111101 <"
b11111111111111111111111111111101 X"
b10 _"
15
19
b1 3
b1 P
b1 V"
b1 ]"
1?
#80
0?
#85
b0 I
b0 ;"
b0 >"
b0 P"
b11 _"
b0 3
b0 P
b0 V"
b0 ]"
09
05
1?
#90
0?
#95
b1000 I"
b10 8
b10 T
b10 H"
b10 ["
b0 _"
b0 ^"
1?
#100
0?
#105
b1001 2
b1001 H
b1001 ."
b1001 Y"
b1100 S
b1100 ?"
b1100 G"
b100100010000000000000000001001 J
b100100010000000000000000001001 /"
b100100010000000000000000001001 2"
b1100 M
b1100 \
b1100 ="
b1000 R
b1000 [
b1000 3"
b1000 J"
b1 ^"
b1 8
b1 T
b1 H"
b1 ["
1?
#110
0?
#115
b11111111111111111111111111111110 Y
b11111111111111111111111111111110 k
b11111111111111111111111111111110 U"
b11111111111111111111111111111110 W"
b11 X
b11 g
b11 *"
b1 _"
b10 3
b10 P
b10 V"
b10 ]"
b1001 ;
b1001 U
b1001 )"
b1001 Z"
b0 8
b0 T
b0 H"
b0 ["
1?
#120
0?
#125
b11111111111111111111111111111111 Y
b11111111111111111111111111111111 k
b11111111111111111111111111111111 U"
1i
b11111111111111111111111111110111 ]
b11111111111111111111111111110111 %"
b11111111111111111111111111111111 b
b11111111111111111111111111111111 t
b1 c
b1 r
b1000 d
b1000 o
b11111111111111111111111111110101 ^
b11111111111111111111111111110101 ""
b1111111111111111111111111111111 _
b1111111111111111111111111111111 }
b11111111111111111111111111111111 `
b11111111111111111111111111111111 z
b11111111111111111111111111111100 a
b11111111111111111111111111111100 w
b111 e
b111 l
b11111111111111111111111111111110 W
b11111111111111111111111111111110 h
b11111111111111111111111111111110 n
b11111111111111111111111111111110 q
b11111111111111111111111111111110 s
b11111111111111111111111111111110 v
b11111111111111111111111111111110 y
b11111111111111111111111111111110 |
b11111111111111111111111111111110 !"
b11111111111111111111111111111110 $"
b11111111111111111111111111111110 '"
b11111111111111111111111111111110 5"
b11111111111111111111111111111110 I
b11111111111111111111111111111110 ;"
b11111111111111111111111111111110 >"
b11111111111111111111111111111110 P"
b11111111111111111111111111111110 #
b11111111111111111111111111111110 F
b11111111111111111111111111111110 6"
b11111111111111111111111111111110 K"
b11111111111111111111111111111110 O
b11111111111111111111111111111110 <"
b11111111111111111111111111111110 X"
b10 _"
15
19
b1 3
b1 P
b1 V"
b1 ]"
1?
#130
0?
#135
b0 I
b0 ;"
b0 >"
b0 P"
b11 _"
b0 3
b0 P
b0 V"
b0 ]"
09
05
1?
#140
0?
#145
b1100 I"
b10 8
b10 T
b10 H"
b10 ["
b0 _"
b0 ^"
1?
#150
0?
#155
b1 Y
b1 k
b1 U"
0i
b1100000100001 ]
b1100000100001 %"
b1100000100001 b
b1100000100001 t
b11111111111111111111111111111110 c
b11111111111111111111111111111110 r
b0 d
b0 o
b1100000100000 V
b1100000100000 f
b1100000100000 m
b1100000100000 p
b1100000100000 u
b1100000100000 x
b1100000100000 {
b1100000100000 ~
b1100000100000 #"
b1100000100000 &"
b1100000100000 7"
b11111111111111111110011111100001 ^
b11111111111111111110011111100001 ""
b1 _
b1 }
b1 `
b1 z
b1 a
b1 w
b1100000100001 e
b1100000100001 l
b1 W
b1 h
b1 n
b1 q
b1 s
b1 v
b1 y
b1 |
b1 !"
b1 $"
b1 '"
b1 5"
b1 A
b1 D"
b1 R"
b100000 L
b100000 ("
b100000 1"
b1100000100000 B
b1100000100000 8"
b1100000100000 F"
b1100000100000 T"
b1100000100000 K
b1100000100000 0"
b1100000100000 S"
b11 G
b11 -"
b11 @"
b11 E
b11 9"
b11 L"
b11 C
b11 +"
b11 B"
b11 O"
b1 F
b1 6"
b1 K"
b1 D
b1 ,"
b1 A"
b1 N"
b0 2
b0 H
b0 ."
b0 Y"
b10000 S
b10000 ?"
b10000 G"
b1000110001100000100000 J
b1000110001100000100000 /"
b1000110001100000100000 2"
b10000 M
b10000 \
b10000 ="
b1100 R
b1100 [
b1100 3"
b1100 J"
b1 ^"
b1 8
b1 T
b1 H"
b1 ["
1?
#160
0?
#165
b100 Y
b100 k
b100 U"
b10 ]
b10 %"
b0 _
b0 }
b0 `
b0 z
b10 a
b10 w
b11 b
b11 t
b1 d
b1 o
b11111111111111111111111111111110 ^
b11111111111111111111111111111110 ""
b100 e
b100 l
b11 V
b11 f
b11 m
b11 p
b11 u
b11 x
b11 {
b11 ~
b11 #"
b11 &"
b11 7"
b100 W"
b100000 X
b100000 g
b100000 *"
b11 A
b11 D"
b11 R"
b1 _"
b10 3
b10 P
b10 V"
b10 ]"
0<
b0 ;
b0 U
b0 )"
b0 Z"
b10 6
b10 Q
b10 C"
b10 \"
b0 8
b0 T
b0 H"
b0 ["
1?
#170
0?
#175
b101 Y
b101 k
b101 U"
b101 ]
b101 %"
b1 _
b1 }
b1 `
b1 z
b1 a
b1 w
b101 b
b101 t
b0 d
b0 o
b11111111111111111111111111111101 ^
b11111111111111111111111111111101 ""
b101 e
b101 l
b100 V
b100 f
b100 m
b100 p
b100 u
b100 x
b100 {
b100 ~
b100 #"
b100 &"
b100 7"
b100 I
b100 ;"
b100 >"
b100 P"
b100 $
b100 E
b100 9"
b100 L"
b100 O
b100 <"
b100 X"
b10 _"
15
19
b1 3
b1 P
b1 V"
b1 ]"
1?
#180
0?
#185
b0 I
b0 ;"
b0 >"
b0 P"
b11 _"
b0 3
b0 P
b0 V"
b0 ]"
09
05
1?
#190
0?
#195
b10000 I"
b10 8
b10 T
b10 H"
b10 ["
b0 _"
b0 ^"
1?
#200
0?
#205
bx Y
bx k
bx U"
xi
bx ]
bx %"
bx b
bx t
bx c
bx r
bx d
bx o
b111111 X
b111111 g
b111111 *"
bx V
bx f
bx m
bx p
bx u
bx x
bx {
bx ~
bx #"
bx &"
bx 7"
bx ^
bx ""
bx _
bx }
bx `
bx z
bx a
bx w
bx e
bx l
bx W
bx h
bx n
bx q
bx s
bx v
bx y
bx |
bx !"
bx $"
bx '"
bx 5"
b11111 A
b11111 D"
b11111 R"
b111111 L
b111111 ("
b111111 1"
b11111111111111111111111111111111 B
b11111111111111111111111111111111 8"
b11111111111111111111111111111111 F"
b11111111111111111111111111111111 T"
b1111111111111111 K
b1111111111111111 0"
b1111111111111111 S"
b11111 G
b11111 -"
b11111 @"
bx E
bx 9"
bx L"
b11111 C
b11111 +"
b11111 B"
b11111 O"
bx F
bx 6"
bx K"
b11111 D
b11111 ,"
b11111 A"
b11111 N"
b111111 2
b111111 H
b111111 ."
b111111 Y"
b10100 S
b10100 ?"
b10100 G"
b11111111111111111111111111111111 J
b11111111111111111111111111111111 /"
b11111111111111111111111111111111 2"
b10100 M
b10100 \
b10100 ="
b10000 R
b10000 [
b10000 3"
b10000 J"
b1 ^"
b1 8
b1 T
b1 H"
b1 ["
1?
#210
0?
#215
b0 8
b0 T
b0 H"
b0 ["
1?
#220
0?
#225
1?
#230
0?
#235
1?
#240
0?
